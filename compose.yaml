name: ecommerce-django

services:
  django-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-django
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      # - /var/run/docker.sock:/var/run/docker-host.sock 
      - ./:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1
    mem_limit: 512m
    stdin_open: true 
    tty: true

  postgres-db:
    image: postgres:latest
    container_name: ecommerce-postgres
    # restart: always
    networks:
      - app-network
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: ecommerce_db
    mem_limit: 512mb

  redis-db:
    image: redis:latest
    container_name: ecommerce-redis
    networks:
      - app-network
    ports:
      - "6379:6379"
    volumes:
      - redis-volume:/data
    mem_limit: 256m
  
  cloudflared-tunnel:
    container_name: ecommerce-cloudflared-tunnel
    image: cloudflare/cloudflared:latest
    networks:
      - app-network
    depends_on:
      - django-app
    command: tunnel --url http://django-app:8000
    mem_limit: 128m

  minio-storage:
    image: quay.io/minio/minio
    container_name: ecommerce-minio
    networks:
      - app-network
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: user123
      MINIO_ROOT_PASSWORD: pass123123
    command: server /data --console-address ":9001"
    volumes:
      - minio-volume:/data




networks:
  app-network:
    driver: bridge

volumes:
  postgres-volume:
  redis-volume:
  minio-volume:
